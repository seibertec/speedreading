package speedreading;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

public class GUI extends javax.swing.JFrame {

    private StatisticsReader.StatisticsResult statistics;
    private String fileName;
    private Thread myThread = null;
    private int milisec = 1600;

    /**
     * Creates new form GUI
     */
    public GUI() {
        this.statistics = new StatisticsReader.StatisticsResult(0, 0, 0);
        initComponents();
        statistikButton.setEnabled(false);
        wpmButton.setEnabled(false);
        startButton.setEnabled(false);
        stopButton.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        chooseFileButton = new javax.swing.JButton();
        statistikButton = new javax.swing.JButton();
        wpmButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();

        mainLabel = new javax.swing.JLabel();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//        StyledDocument doc = jLabel1.getStyledDocument();
//        SimpleAttributeSet center = new SimpleAttributeSet();       //attribute set to control center alignment
//        StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);   //Align text to the center
//        doc.setParagraphAttributes(0, doc.getLength(), center, false);  //set formatting options

        chooseFileButton.setText("Choose File");

        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonClicked(evt);
            }
        });

        statistikButton = new javax.swing.JButton();
        statistikButton.setText("Statistik");

        statistikButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statistikButtonClicked(evt);
            }
        });
        wpmButton.setText("Wpm");

        wpmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wpmButtonClicked(evt);
            }
        });
        startButton.setText("Start");

        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonClicked(evt);
            }
        });
        stopButton.setText("Stop");

        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonClicked(evt);
            }
        });

        mainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(wpmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(statistikButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(mainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(statistikButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wpmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(82, 82, 82)
                                .addComponent(mainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>

    private void chooseFileButtonClicked(java.awt.event.ActionEvent evt) {
        JButton open = new JButton();                                //File Reader
        JFileChooser chooser = new JFileChooser();

        // Chooser configuration
        chooser.setCurrentDirectory(new java.io.File("C:"));
        chooser.setDialogTitle("Speed Reading");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        // set *.txt as default selection

        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("Text files (*.txt)", "txt");
        // add filters
        chooser.addChoosableFileFilter(txtFilter);
        chooser.setFileFilter(txtFilter);

        if (chooser.showOpenDialog(open) == JFileChooser.APPROVE_OPTION) {
            this.fileName = chooser.getSelectedFile().getAbsolutePath();  //Path wird Kopiert
            mainLabel.setText("Chosen file: " + this.fileName);
            this.statistics = StatisticsReader.readStatistics(fileName);
            statistikButton.setEnabled(true);
            wpmButton.setEnabled(true);
            startButton.setEnabled(true);
        }
    }

    private void statistikButtonClicked(java.awt.event.ActionEvent evt) {

        JOptionPane.showMessageDialog(
                this,
                new Object[]{
                        "#characters: " + this.statistics.getCharCount(),
                        "#words: " + this.statistics.getWordCount(),
                        "#sentences: " + this.statistics.getSentenceCount()
                },
                "Document statistics",
                JOptionPane.INFORMATION_MESSAGE
        );
    }

    private void wpmButtonClicked(java.awt.event.ActionEvent evt) {
        String title = "Select words per minutes (wpm)";
        JSlider slider = getSlider();
        int dialogResponse = JOptionPane.showOptionDialog
                (this,                  // I'm within a JFrame here
                        slider,
                        title,
                        JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, null, null
                );
        if (JOptionPane.OK_OPTION == dialogResponse) {
            int wpm = slider.getValue();
            this.milisec = (int) ((60.0 / wpm) * 1000.0);
            this.mainLabel.setText("Chosen wpm: " + wpm);
        }
    }

    private JSlider getSlider() {
        JSlider slider = new JSlider(JSlider.HORIZONTAL, 0, 700, 0);
        slider.setMajorTickSpacing(100);
        slider.setPaintTicks(true);
        slider.setPaintLabels(true);
        return slider;
    }

    private void startButtonClicked(java.awt.event.ActionEvent evt) {
        this.myThread = new Thread(new GuiReader(this.fileName, this.milisec));
        this.myThread.start();
        stopButton.setEnabled(true);
        startButton.setEnabled(false);
    }

    private void stopButtonClicked(java.awt.event.ActionEvent evt) {
        this.myThread.stop();
        stopButton.setEnabled(false);
        startButton.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    /*
        Create a sub class of the standard reader and override the readout
        method to read the passed word to the GUI.
     */
    private class GuiReader extends Reader {
        GuiReader(String fileName, int milisec) {
            super(fileName, milisec);
        }

        @Override
        protected void readout(String word) {
            mainLabel.setText(word);  //Set the word in the text pane to the word read from file
        }
    }


    // Variables declaration - do not modify
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JButton statistikButton;
    private javax.swing.JButton wpmButton;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel mainLabel;
    // End of variables declaration
}
